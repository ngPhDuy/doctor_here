# appointment_tools.py
from tools.mock_data import doctor_db

def book_appointment(doctor_name: str, time: str, reason: str = "") -> str:
    return f"ƒê√£ ƒë·∫∑t l·ªãch kh√°m v·ªõi b√°c sƒ© {doctor_name} l√∫c {time} th√†nh c√¥ng."

def cancel_appointment(doctor_name: str, time: str) -> str:
    return f"ƒê√£ h·ªßy l·ªãch kh√°m v·ªõi b√°c sƒ© {doctor_name} l√∫c {time} th√†nh c√¥ng."

def get_doctor_info(doctor_name: str) -> str:
    info = doctor_db.get(doctor_name)
    if info:
        return (
            f"üë©‚Äç‚öïÔ∏è Th√¥ng tin b√°c sƒ© {info['name']}\n"
            f"- Tu·ªïi: {info['age']}\n"
            f"- Gi·ªõi t√≠nh: {info['gender']}\n"
            f"- Chuy√™n khoa: {info['specialty']}\n"
            f"- Kinh nghi·ªám: {info['experience']} nƒÉm\n"
            f"- B·ªánh vi·ªán: {info['hospital']}\n"
            f"- ƒê·ªãa ch·ªâ: {info['address']}"
        )
    else:
        return f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ b√°c sƒ© {doctor_name}."

def add_love_list(doctor_name: str) -> str:
    return f"ƒê√£ th√™m b√°c sƒ© {doctor_name} v√†o danh s√°ch y√™u th√≠ch c·ªßa b·∫°n."

def delete_love_list(doctor_name: str) -> str:
    return f"ƒê√£ x√≥a b√°c sƒ© {doctor_name} kh·ªèi danh s√°ch y√™u th√≠ch c·ªßa b·∫°n."

def get_love_list() -> str:
    return "Danh s√°ch b√°c sƒ© y√™u th√≠ch c·ªßa b·∫°n: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def add_relative(relative_name: str) -> str:
    return f"ƒê√£ th√™m {relative_name} v√†o danh s√°ch ng∆∞·ªùi th√¢n."

def delete_relative(relative_name: str) -> str:
    return f"ƒê√£ x√≥a {relative_name} kh·ªèi danh s√°ch ng∆∞·ªùi th√¢n."

def get_relatives() -> str:
    return "Danh s√°ch ng∆∞·ªùi th√¢n: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def connect_to_chat(doctor_name: str) -> str:
    return f"ƒê√£ k·∫øt n·ªëi tr√≤ chuy·ªán v·ªõi b√°c sƒ© {doctor_name}."

def create_reminder(medicine_name: str, time: str, dosage: str = "") -> str:
    return f"ƒê√£ t·∫°o nh·∫Øc nh·ªü u·ªëng thu·ªëc {medicine_name} l√∫c {time}. Li·ªÅu l∆∞·ª£ng: {dosage or 'Kh√¥ng c√≥'}."

def get_all_diagnosis_results() -> str:
    return "T·∫•t c·∫£ k·∫øt qu·∫£ ch·∫©n ƒëo√°n c·ªßa b·∫°n: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_appointment_by_time(time: str) -> str:
    return f"Th√¥ng tin cu·ªôc h·∫πn t·∫°i th·ªùi gian {time}: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_appointment() -> str:
    return "Danh s√°ch t·∫•t c·∫£ c√°c cu·ªôc h·∫πn c·ªßa b·∫°n: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_detail_appointment(doctor_name: str, time: str) -> str:
    return f"Chi ti·∫øt cu·ªôc h·∫πn v·ªõi b√°c sƒ© {doctor_name} l√∫c {time}: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_detail_diagnosis_patient(doctor_name: str, time: str) -> str:
    return f"K·∫øt qu·∫£ ch·∫©n ƒëo√°n c·ªßa b·∫°n sau khi kh√°m v·ªõi b√°c sƒ© {doctor_name} l√∫c {time}: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_doctor_list() -> str:
    return "Danh s√°ch t·∫•t c·∫£ b√°c sƒ©: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_doctor_specialization(specialization: str) -> str:
    return f"Danh s√°ch b√°c sƒ© chuy√™n ng√†nh {specialization}: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_medicine_schedule() -> str:
    return "L·ªãch u·ªëng thu·ªëc c·ªßa b·∫°n: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_medicine(medicine_name: str) -> str:
    return f"Th√¥ng tin v·ªÅ thu·ªëc {medicine_name}: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def get_upcoming_appointments() -> str:
    return "Danh s√°ch c√°c cu·ªôc h·∫πn s·∫Øp t·ªõi: [gi·∫£ l·∫≠p - ch∆∞a c√≥ d·ªØ li·ªáu th·∫≠t]."

def medical_advice(symptoms: str) -> str:
    return f"D·ª±a tr√™n tri·ªáu ch·ª©ng b·∫°n cung c·∫•p ({symptoms}), b·∫°n n√™n ƒë·∫øn g·∫∑p b√°c sƒ© ƒë·ªÉ ki·ªÉm tra chi ti·∫øt h∆°n."

def update_profile(username: str = None, email: str = None, phone_number: str = None,
                   date_of_birth: str = None, full_name: str = None) -> str:
    updated = []
    if username:
        updated.append(f"username = {username}")
    if email:
        updated.append(f"email = {email}")
    if phone_number:
        updated.append(f"phone_number = {phone_number}")
    if date_of_birth:
        updated.append(f"date_of_birth = {date_of_birth}")
    if full_name:
        updated.append(f"full_name = {full_name}")

    if not updated:
        return "update_profile: b·∫°n ch∆∞a cung c·∫•p th√¥ng tin n√†o ƒë·ªÉ c·∫≠p nh·∫≠t. [gi·∫£ l·∫≠p - ch∆∞a c√≥ l∆∞u th·∫≠t]"

    return "update_profile: ƒë√£ c·∫≠p nh·∫≠t " + ", ".join(updated) + " [gi·∫£ l·∫≠p - ch∆∞a c√≥ l∆∞u th·∫≠t]"

